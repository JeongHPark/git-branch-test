swagger: "2.0"
info:
  title: Space Mission Control API
  version: 1.0.0
  description: |
    API for managing space missions, control users, astronauts, and launch vehicles.
    All error strings are required to be clear descriptive message. The descriptive message won't change the marks you receive when being automarked as long as you make an attempt for each one to be custom, but they will affect your code quality mark.

schemes:
  - http

tags:
  - name: "Iteration 2 (Using Iteration 1)"
    description: Iteration 2 routes that leverage work done in iteration 1
  - name: "Iteration 2 (Using a modified Iteration 1)"
    description: Iteration 2 routes that leverage work done in iteration 1 with a modified output
  - name: "Iteration 2 (New)"
    description: Iteration 2 routes that are new
components:
  prim:
    ControlUserSessionId:
      type: string
      example: "abcd1234"
    Error:
      type: string
      example: "Meaningful error message"
    Email:
      type: string
      example: james.kirk@starfleet.gov.au
    Password:
      type: string
      example: livelong123
    NameFirst:
      type: string
    NameLast:
      type: string
    ControlUserId:
      type: number
      example: 1
    MissionId:
      type: number
      example: 1
    AstronautId:
      type: number
      example: 1
    Timestamp:
      type: number
      example: 1739912980
      description: In seconds. You can find more information that here https://en.wikipedia.org/wiki/Unix_time
    SmallMissionList:
      type: array
      items:
        type: object
        properties:
          missionId:
            $ref: '#/components/prim/MissionId'
          name:
            type: string
            example: Mercury
    SmallAstronautList:
      type: array
      items:
        type: object
        properties:
          astronautId:
            $ref: '#/components/prim/AstronautId'
          designation:
            type: string
            example: Captain James Kirk
          assigned:
            type: boolean
            example: false
  group:
    ControlUser:
      type: object
      properties:
        controlUserId:
          type: integer
          example: 132
        name:
          type: string
          example: James Kirk
        email:
          type: string
          example: james.kirk@starfleet.com.au
        numSuccessfulLogins:
          type: integer
          example: 5
        numFailedPasswordsSinceLastLogin:
          type: integer
          example: 2
    SmallMissions:
      type: array
      items:
        type: object
        properties:
          missionId:
            $ref: '#/components/prim/MissionId'
          name:
            type: string
            example: My Space Mission name
    SmallAstronauts:
      type: array
      items:
        type: object
        properties:
          astronautId: 
            $ref: '#/components/prim/AstronautId'
          name:
            type: string
            description: A concatenated string of rank, nameFirst, space and then nameLast
            example: Captain James Kirk
          assigned:
            type: boolean
            description: If this astronaut is currently assigned to a space mission
            example: true
                
    MissionIter2:
      type: object
      properties:
        missionId:
          $ref: '#/components/prim/MissionId'
        name:
          type: string
          example: This is the name of the space mission
        timeCreated:
          $ref: '#/components/prim/Timestamp'
        timeLastEdited:
          $ref: '#/components/prim/Timestamp'
        description:
          type: string
          example: A description of the aims of this space mission
        target:
          type: string
          example: The target destination of this space mission
        assignedAstronauts:
          type: array
          items:
            type: object
            properties:
              astronautId:
                type: number
                example: 1
              name:
                type: string
                description: A concatenated string of rank, nameFirst and nameLast for the astronaut seperated by spaces.
                example: Captain James Kirk
    AstronautIter2:
      type: object
      properties:
        astronautId:
          $ref: '#/components/prim/AstronautId'
        designation:
          type: string
          description: This is a concatenated string of Rank, nameFirst, nameLast
          example: Captain James Kirk
        timeAdded:
          $ref: '#/components/prim/Timestamp'
        timeLastEdited:
          $ref: '#/components/prim/Timestamp'
        age:
          type: number
          example: 30
        weight:
          type: number
          example: 70
        height:
          type: number
          example: 156
        assignedMission:
          type: object
          properties:
            missionId:
              type: number
              example: 1
            objective:
              type: string
              description: The mission target in square brackets concatenated with the mission name. E.g. Target "Earth Orbit" and Name "Mercury" would be "[Earth Orbit] Mercury"
              example: "[Earth Orbit] Mercury"
        # allocatedLaunchVehicle:
        #   type: object
        #   properties:
        #     launchVehicleId:
        #       type: number
        #       example: 1
        #     designation:
        #       type: string
        #       example: A concatendated string of the Series and Model in square brackets and then the Name. E.g. A launch vehicle with name "Enterprise", Series "Saturn", Model "V" would become "[Saturn V] Enterprise"

  path:
    MissionId:
      in: path
      name: missionid
      required: true
      schema:
        $ref: '#/components/prim/MissionId'
    AstronautId:
      in: path
      name: astronautid
      required: true
      schema:
        $ref: '#/components/prim/AstronautId'
  header:
    ControlUserSessionId:
      in: header
      name: controlUserSessionId
      required: true
      schema:
        type: string
  body:
    Register:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          email:
            $ref: '#/components/prim/Email'
          password:
            $ref: '#/components/prim/Password'
          nameFirst:
            $ref: '#/components/prim/NameFirst'
          nameLast:
            $ref: '#/components/prim/NameLast'
    Login:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          email:
            $ref: '#/components/prim/Email'
          password:
            $ref: '#/components/prim/Password'
    ControlUserDetailsUpdate:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          email:
            $ref: '#/components/prim/Email'
          nameFirst:
            $ref: '#/components/prim/NameFirst'
          nameLast:
            $ref: '#/components/prim/NameLast'
    ControlUserPasswordUpdate:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          oldPassword:
            $ref: '#/components/prim/Password'
          newPassword:
            $ref: '#/components/prim/Password'
    MissionCreate:      
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          name:
            type: string
          description:
            type: string
            example: A description of this space mission
          target:
            type: string
            example: The target destination of this space mission
    MissionNameUpdate:      
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          name:
            type: string
    MissionDescriptionUpdate:      
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          description:
            type: string
            example: A description of this space mission
    MissionTargetUpdate:      
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          target:
            type: string
            example: The target destination of this space mission
    MissionTransfer:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          userEmail:
            $ref: '#/components/prim/Email'
    AstronautCreate:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          nameFirst:
            type: string
          nameLast:
            type: string
          rank:
            type: string
          age:
            type: integer
            format: int32
          weight:
            type: number
            format: float
          height:
            type: number
            format: float
    AstronautUpdate:
      in: body
      name: body
      required: true
      schema:
        type: object
        properties:
          nameFirst:
            type: string
          nameLast:
            type: string
          rank:
            type: string
          age:
            type: integer
            format: int32
          weight:
            type: number
            format: float
          height:
            type: number
            format: float
        
  return:
    ControlUserSessionId:
      type: object
      properties:
        token:
          $ref: '#/components/prim/ControlUserSessionId'
    Error:
      properties:
        error:
          type: string
            - error
          $ref: '#/components/prim/Error'
    Empty:
      type: object
    ControlUser:
      type: object
      properties:
        user:
          $ref: '#/components/group/ControlUser'
    ControlUserSession:
      type: object
      properties:
        controlUserSessionId:
          $ref: '#/components/prim/ControlUserSessionId'
    MissionList:
      type: object
      properties:
        missions:
          $ref: '#/components/group/SmallMissions'
    MissionNew:
      type: object
      properties:
        missionId:
          $ref: '#/components/prim/MissionId'
    MissionSingleIter2:
      $ref: '#/components/group/MissionIter2'  
    AstronautSingleIter2:
      $ref: '#/components/group/AstronautIter2'
    AstronautList:
      type: object
      properties:
        astronauts:
          $ref: '#/components/group/SmallAstronauts'
    AstronautNew:
      type: object
      properties:
        astronautId:
          $ref: '#/components/prim/AstronautId'


  # schemas:
  #   ControlUser:
  #     in: body
  #     type: object
  #     properties:
  #       controlUserId:
  #         type: number
  #       email:
  #         type: string
  #         format: email
  #       password:
  #         type: string
  #         format: password
  #       nameFirst:
  #         type: string
  #       nameLast:
  #         type: string
  #       numSuccessfulLogins:
  #         type: number
  #       numFailedPasswordsSinceLastLogin:
  #         type: number
  #     required:
  #       - email
  #       - password
  #       - nameFirst
  #       - nameLast

  #   ControlUserSession:
  #     in: header
  #     type: object
  #     properties:
  #       controlUserSessionId:
  #         type: string
  #     required:
  #       - controlUserSessionId

  #   Mission:
  #     type: object
  #     properties:
  #       missionId:
  #         type: number
  #       controlUserId:
  #         type: number
  #       name:
  #         type: string
  #       description:
  #         type: string
  #       target:
  #         type: string
  #       timeCreated:
  #         type: number
  #       timeLastEdited:
  #         type: number
  #     required:
  #       - controlUserId
  #       - name
  #       - description
  #       - target

  #   Astronaut:
  #     type: object
  #     properties:
  #       astronautId:
  #         type: number
  #       nameFirst:
  #         type: string
  #       nameLast:
  #         type: string
  #       rank:
  #         type: string
  #       age:
  #         type: integer
  #         format: int32
  #       weight:
  #         type: number
  #         format: float
  #       height:
  #         type: number
  #         format: float
  #       # trainedLaunchVehicles:
  #       #   type: array
  #       #   items:
  #       #     type: number
  #     required:
  #       - nameFirst
  #       - nameLast
  #       - rank
  #       - age
  #       - weight
  #       - height

  #   LaunchVehicle:
  #     type: object
  #     properties:
  #       launchVehicleId:
  #         type: number
  #       name:
  #         type: string
  #       manufacturer:
  #         type: string
  #       model:
  #         type: string
  #       weight:
  #         type: number
  #         format: float
  #       thrustCapacity:
  #         type: number
  #         format: float
  #       fuelCapacity:
  #         type: number
  #         format: float
  #       fuelBurnRate:
  #         type: number
  #         format: float
  #       payloadCapacity:
  #         type: number
  #         format: float
  #       crewCapacity:
  #         type: number
  #         format: int32
  #     required:
  #       - name
  #       - series
  #       - model
  #       - weight
  #       - thrustCapacity
  #       - fuelCapacity
  #       - fuelBurnRate
  #       - payloadCapacity
  #       - crewCapacity
        
  
paths:
  /v1/admin/auth/register:
    post:
      summary: Create a new control user
      description: Takes in information about a new control user and registers them in the system.
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/body/Register'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/ControlUserSession'
        400:
          description: |
            If any of the following are true:
            - Email address is used by another user
            - Email does not satisfy this: https://www.npmjs.com/package/validator (validator.isEmail)
            - NameFirst contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameFirst is less than 2 characters or more than 20 characters
            - NameLast contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameLast is less than 2 characters or more than 20 characters
            - Password is less than 8 characters
            - Password does not contain at least one number and at least one letter
          schema:
            $ref: '#/components/return/Error'
      

  /v1/admin/auth/login:
    post:
      summary: Login control user
      parameters:
        - $ref: '#/components/body/Login'
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/ControlUserSession'
        400:
          description: |
            If any of the following are true:
            - Email address does not exist
            - Password is not correct for the given email
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/auth/logout:
    post:
      summary: Logout control user
      description: Should be called with a controlUserSessionId that is returned after either a login or register has been made.
      tags:
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/controluser/details:
    get:
      summary: Get the details of a control user.
      description: For the given control user that is logged in, return all of the relevant details.
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
      responses:
        200:
          description: |
            - "name" is the first and last name concatenated with a single space between them
            - numSuccessfulLogins includes logins direct via registration, and is counted from the moment of registration starting at 1
            - numFailedPasswordsSinceLastLogin is reset every time they have a successful login, and simply counts the number of attempted logins that failed due to incorrect password, only since the last login
          schema:
            $ref: '#/components/return/ControlUser'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
    put:
      summary: Update the details of an control user (non-password).
      description: Given a set of properties, update those properties of this logged in control user.
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/body/ControlUserDetailsUpdate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Email is currently used by another user (excluding the current authorised user)
            - Email does not satisfy this: https://www.npmjs.com/package/validator (validator.isEmail)
            - NameFirst contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameFirst is less than 2 characters or more than 20 characters
            - NameLast contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameLast is less than 2 characters or more than 20 characters
          schema:
            $ref: '#/components/return/Error'
  
  /v1/admin/controluser/password:
    put:
      summary: Update the password of this control user.
      description: Given details relating to a password change, update the password of a logged in user.
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/body/ControlUserPasswordUpdate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Old Password is not the correct old password
            - Old Password and New Password match exactly
            - New Password has already been used before by this user
            - New Password is less than 8 characters
            - New Password does not contain at least one number and at least one letter
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/list:
    get:
      summary: List all missions for the current control user.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/MissionList'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission:
    post:
      summary: Create a new space mission
      description: Given the basic details for a space mission, create one for the logged in control user.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/body/MissionCreate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/MissionNew'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Name contains invalid characters. Valid characters are alphanumeric and spaces
            - Name is either less than 3 characters long or more than 30 characters long
            - Name is already used by the current logged in user for another space mission
            - Description is more than 400 characters in length (note: empty strings are OK)
            - Target is more than 100 characters in length (note: empty strings are OK)
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/{missionid}:
    delete:
      summary: Remove a mission
      description: |
       - Given a particular space mission, delete it.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but control user is not an owner of this space mission or the space mission doesn't exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Astronauts have been assigned to this mission.
          schema:
            $ref: '#/components/return/Error'

    get:
      summary: Get info about current space mission
      description: Get all of the relevant information about the current space mission including attached astronauts.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (Using a modified Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/MissionSingleIter2'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/{missionid}/name:
    put:
      summary: Update the name of the specified space mission
      description: Given a new name for a space mission, update the name for the specified space mission
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
        - $ref: '#/components/body/MissionNameUpdate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Name contains invalid characters. Valid characters are alphanumeric and spaces
            - Name is either less than 3 characters long or more than 30 characters long
            - Name is already used by the current logged in user for another quiz
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/{missionid}/description:
    put:
      summary: Update the description of the specified space mission
      description: Given a new description for a space mission, update the description for the specified space mission
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
        - $ref: '#/components/body/MissionDescriptionUpdate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Description is more than 400 characters in length (note: empty strings are OK)
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/{missionid}/target:
    put:
      summary: Update the target of the specified space mission
      description: Given a new target for a space mission, update the target for the specified space mission
      tags:
        # - "By Topic: Access Management"
        - "Iteration 2 (Using Iteration 1)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
        - $ref: '#/components/body/MissionTargetUpdate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Target is more than 100 characters in length (note: empty strings are OK)
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/mission/{missionid}/transfer:
    post:
      summary: Transfer this mission to another control user
      description: Given the email of another control user, transfer ownership of this mission to that new control user.
      tags:
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/MissionId'
        - $ref: '#/components/body/MissionTransfer'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid ControlUserSessionId is provided, but control user is not an owner of this space mission or space mission doesn't exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - userEmail is not a real control user
            - userEmail is the current logged in control user
            - missionId refers to a space mission that has a name that is already used by the target user
          schema:
            $ref: '#/components/return/Error'


  /v1/admin/astronaut/pool:
    get:
      summary: See the current pool of astronauts in our system.
      tags:
        # - "By Topic: Astronaut Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
      responses:
        200:
          description: A list of astronauts with names and ranks and if they are assigned or not
          schema:
            $ref: '#/components/return/AstronautList'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'


  /v1/admin/astronaut:
    post:
      summary: Add an astronaut to the pool of candidates for our space missions.
      description: Given the basic details, create a new astronaut. As astronaut does not belong to any specific controlUser.
      tags:
        # - "By Topic: Astronaut Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/body/AstronautCreate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/AstronautNew'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - Another Astronaut already exists with the same nameFirst and nameLast
            - NameFirst contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameFirst is less than 2 characters or more than 20 characters
            - NameLast contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameLast is less than 2 characters or more than 20 characters
            - Rank is less than 5 characters or more than 50 characters
            - Rank contains characters other than lowercase letters, uppercase letters, spaces, hyphens, round brackets or apostrophes
            - Age < 20 or > 60
            - Weight (measured in kgs at Earth gravity) > 100
            - Height (measured in cms) < 150 or > 200 
          schema:
            $ref: '#/components/return/Error'

  /v1/admin/astronaut/{astronautid}:
    delete:
      summary: Remove an astronaut
      description: |
       - Given a particular astronaut, remove them from the astronaut pool.
      tags:
        # - "By Topic: Astronaut Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/AstronautId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - astronautid is invalid
            - The astronaut is currently assigned to a mission.
          schema:
            $ref: '#/components/return/Error'

    get:
      summary: Get info about an astronaut in the astronaut pool.
      description: Get all of the relevant information about the current astronaut including assigned missions.
      tags:
        # - "By Topic: Astronaut Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/AstronautId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/AstronautSingleIter2'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
           Any of the following errors:
           - astronautid is invalid
    put:
      summary: Edit an astronaut currently in the pool.
      description: Given the new basic details, edit the details of that astronaut.
      tags:
        # - "By Topic: Astronaut Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/AstronautId'
        - $ref: '#/components/body/AstronautCreate'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - astornautid is invalid
            - Another Astronaut already exists with the same nameFirst and nameLast
            - NameFirst contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameFirst is less than 2 characters or more than 20 characters
            - NameLast contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - NameLast is less than 2 characters or more than 20 characters
            - Rank is less than 5 characters or more than 50 characters
            - Rank contains characters other than lowercase letters, uppercase letters, spaces, hyphens, or apostrophes
            - Age < 20 or > 60
            - Weight (measured in kgs at Earth gravity) > 100
            - Height (measured in cms) < 150 or > 200 
          schema:
            $ref: '#/components/return/Error'

  # /v1/admin/launchvehicle/list:
  #   get:
  #     summary: Get all launch vehicles
  #     parameters:
  #       - name: controlUserSessionId
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     responses:
  #       '200':
  #         description: A list of launch vehicles
  #         content:
  #           application/json:
  #             schema:
  #               type: array
  #               items:
  #                 $ref: '#/components/schemas/LaunchVehicle'

  # /v1/admin/launchvehicle:
  #   post:
  #     summary: Create a new launch vehicle
  #     parameters:
  #       - name: controlUserSessionId
  #         in: header
  #         required: true
  #         schema:
  #           type: string
  #     requestBody:
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/LaunchVehicle'
  #     responses:
  #       '201':
  #         description: Launch vehicle created
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/LaunchVehicle'

  # /v1/admin/launchvehicle:
  #   delete:
  #   get:

  /v1/admin/mission/{missionid}/assign/{astronautid}:
    post:
      summary: Assign an astronaut to a space mission.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/AstronautId'
        - $ref: '#/components/path/MissionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - astronautid is invalid
            - The astronaut is already assigned to another mission
          schema:
            $ref: '#/components/return/Error'
            
    delete:
      summary: Un-assign an astronaut from a space mission.
      tags:
        # - "By Topic: Mission Management"
        - "Iteration 2 (New)"
      parameters:
        - $ref: '#/components/header/ControlUserSessionId'
        - $ref: '#/components/path/AstronautId'
        - $ref: '#/components/path/MissionId'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
        401:
          description: ControlUserSessionId is empty or invalid (does not refer to valid logged in user session)
          schema:
            $ref: '#/components/return/Error'
        403:
          description: Valid controlUserSessionId is provided, but the control user is not an owner of this mission or the specified missionId does not exist
          schema:
            $ref: '#/components/return/Error'
        400:
          description: |
            If any of the following are true:
            - astroanutid is invalid
            - The astronaut not assigned to this space mission.
          schema:
            $ref: '#/components/return/Error'
  
  /clear:
    delete:
      summary: Remove all data in the program
      tags:
        # - "By Topic: Data Layer"
        - "Iteration 2 (Using Iteration 1)"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/components/return/Empty'
  # /v1/admin/mission/{missionid}/allocate/{launchvehicleid}:
  #   post:
  #   delete:
  
  # /v1/admin/astronaut/{astronautid}/train/{launchvehicleid}:
  #   post:
  #   delete:

  # /v1/admin/mission/{missionid}/launchcheck:
  #   get:

